version: '3.9'

services:
  flask:
    build: 
      context: ./
      dockerfile: Dockerfile
    depends_on:
      wait-mariadb:
        condition: service_completed_successfully
      wait-mongodb:
        condition: service_completed_successfully
    env_file:
      - ./monolith/.env
    ports: 
      - "5000"
    networks:
      - microgo
    volumes:
      - ./logs:/app/monolith/logs

  nginx:
    image: nginx:latest
    depends_on:
      - flask
    networks:
      - microgo
    ports:
      - "5000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

  mariadb:
    image: mariadb:latest
    networks:
      - microgo
    ports:
      - "3306:3306"
    env_file:
      - ./.env
    volumes:
      - mariadb-data:/var/lib/mysql
      - ./bootstrap/mariadb:/docker-entrypoint-initdb.d

  mongodb:
    image: mongo:4.4.18
    networks:
      - microgo
    env_file:
      - ./.env
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./bootstrap/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro

  wait-mariadb:
    image: atkrad/wait4x
    depends_on:
      - mariadb
    networks:
      - microgo
    command: tcp mariadb:3306 -t 20s -i 1000ms

  wait-mongodb:
    image: atkrad/wait4x
    depends_on:
      - mariadb
    networks:
      - microgo
    command: tcp mongodb:27017 -t 20s -i 1000ms

networks:
  microgo:

volumes:
  mongo-data:
  mariadb-data: